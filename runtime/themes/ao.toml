# Theme: Ao
# Author: YardQuit

# SYNTAX HIGHLIGHTING
"attribute"                 = { fg = "yellow" }
"comment"                   = { fg = "gray" }
"constant"                  = { fg = "blue" }
"constant.character.escape" = { fg = "yellow" }
"constructor"               = { fg = "orange" }
"diff"                      = { fg = "white" }
"diff.delta"                = { fg = "brown" }
"diff.minus"                = { fg = "red" }
"function"                  = { fg = "purple" }
"function.macro"            = { fg = "green" }
"function.method"           = { fg = "green" }
"function.special"          = { fg = "yellow" }
"keyword"                   = { fg = "red" }
"keyword.directive"         = { fg = "white" }
"keyword.function"          = { fg = "red" }
"keyword.operator"          = { fg = "blue" }
"keyword.storage"           = { fg = "red" }
"keyword.storage.modifier"  = { fg = "green" }
"label"                     = { fg = "blue" }
"namespace"                 = { fg = "white" }
"operator"                  = { fg = "white" }
"punctuation"               = { fg = "white" }
"punctuation.bracket"       = { fg = "orange" }
"punctuation.special"       = { fg = "yellow" }
"string"                    = { fg = "blue" }
"string.regexp"             = { fg = "yellow" }
"tag"                       = { fg = "green" }
"type"                      = { fg = "white" }
"type.builtin"              = { fg = "white" }
"type.enum"                 = { fg = "white" }
"type.enum.variant"         = { fg = "white" }
"type.parameter"            = { fg = "white" }
"variable"                  = { fg = "orange" }
"variable.other"            = { fg = "green" }
"variable.other.member"     = { fg = "green" }
"variable.parameter"        = { fg = "yellow" }

# MARKUP, SYNTAX HIGHLIGHTING AND INTERFACE HYBRID
"markup.bold"          = { fg = "crystal_blue", modifiers = [ "bold" ] }
"markup.heading"       = { fg = "blaze_orange" }
"markup.heading.1"     = { fg = "crystal_blue", modifiers = [ "bold" ] }
"markup.heading.2"     = { fg = "sky_blue", modifiers = [ "bold" ] }
"markup.heading.3"     = { fg = "dreamy_blue", modifiers = [ "bold" ] }
"markup.heading.4"     = { fg = "crystal_blue" }
"markup.heading.5"     = { fg = "sky_blue" }
"markup.heading.6"     = { fg = "dreamy_blue" }
"markup.italic"        = { fg = "crystal_blue", modifiers = [ "italic" ] }
"markup.link"          = { fg = "crystal_blue", underline = { color = "light_purple", style = "line" } }
"markup.link.label"    = { fg = "crystal_blue" }
"markup.link.text"     = { fg = "crystal_blue", modifiers = [ "bold" ] }
"markup.link.url"      = { fg = "slate_purple", underline = { color = "slate_purple", style = "line" } }
"markup.list"          = { fg = "blaze_orange" }
"markup.quote"         = { fg = "winter_sky", modifiers = [ "italic" ] }
"markup.raw"           = { fg = "winter_sky" }
"markup.raw.block"     = { fg = "white" }
"markup.strikethrough" = { fg = "crystal_blue", modifiers = [ "crossed_out" ] }

# USER INTERFACE 
"ui.background" = { bg = "deep_abyss" } # workspace background
"ui.background.separator" = { fg = "winter_sky" } # picker separator below input line (space + j)
"ui.bufferline" = { fg = "slate_gray", modifiers = [ "bold" ] } # bufferline inactive tab
"ui.bufferline.active" = { bg = "twilight_blue", fg = "winter_sky" } # bufferline active tab
"ui.bufferline.background" = { bg = "pitch_black" } # bufferline background
"ui.cursor" = { modifiers = [ "reversed" ] } # only if "ui.cursor.primary.normal" isn't set
"ui.cursor.insert" = { bg = "rustic_red" } # slave cursor block in insert mode
"ui.cursor.match" = { bg = "blaze_orange", fg = "deep_abyss", modifiers = [
  "bold",
] } # matching bracket etc
"ui.cursor.normal" = { bg = "twilight_blue", fg = "winter_sky" } # slave cursor block in normal mode
"ui.cursor.primary" = { modifiers = [
  "reversed",
] } # cursor with primary selection (has no effect due to "ui.cursor.primary.normal" is set)
"ui.cursor.primary.insert" = { bg = "ruby_glow", fg = "deep_abyss" } # cursor block in insert mode
"ui.cursor.primary.normal" = { bg = "sky_blue", fg = "deep_abyss" } # cursor block in normal mode
"ui.cursor.primary.select" = { bg = "deep_purple", fg = "winter_sky" } # cursor block in select mode (not the selected color)
"ui.cursor.select" = { bg = "deep_purple" } # slave cursor block in select mode
"ui.cursorcolumn.primary" = { bg = "nightfall_blue" } # column of the primary cursor
"ui.cursorcolumn.secondary" = { bg = "midnight_thunder" } # columns of secondary cursors
"ui.cursorline.primary" = { bg = "nightfall_blue" } # line of the primary cursor
"ui.cursorline.secondary" = { bg = "midnight_thunder" } # lines of secondary cursors
"ui.gutter" = { bg = "deep_abyss" } # gutter
"ui.gutter.selected" = { bg = "pitch_black" } # gutter for the line the cursor is on
"ui.linenr" = { fg = "slate_gray" } # line numbers
"ui.linenr.selected" = { fg = "blaze_orange", modifiers = [
  "bold",
] } # line number for the line the cursor is on
"ui.selection" = { bg = "deep_purple" } # slave selections in the editing area
"ui.selection.primary" = { bg = "light_purple" } # primary selection in the editing area
"ui.statusline" = { bg = "twilight_blue", fg = "winter_sky" } # statusline, fucused
"ui.statusline.inactive" = { bg = "pitch_black", fg = "slate_gray" } # statusline, unfocused
"ui.statusline.insert" = { bg = "blaze_orange", fg = "deep_abyss", modifiers = [
  "bold",
] } # statusline insert mode (if editor.color-modes is enabled)
"ui.statusline.normal" = { bg = "leafy_green", fg = "deep_abyss", modifiers = [
  "bold",
] } # statusline normal mode (if editor.color-modes is enabled)
"ui.statusline.select" = { bg = "sky_blue", fg = "deep_abyss", modifiers = [
  "bold",
] } # statusline select mode (if editor.color-modes is enabled)
"ui.statusline.separator" = { fg = "winter_sky" } # separator character is statusline
"ui.virtual.indent-guide" = { fg = "stormy_night" } # vertical indent width guides
"ui.virtual.inlay-hint" = { fg = "slate_gray" } # inlay hints of all kinds
"ui.virtual.inlay-hint.parameter" = { fg = "slate_gray" } # inlay hints of kind parameter (lsps are not required to set a kind)
"ui.virtual.inlay-hint.type" = { fg = "slate_gray" } # inlay hints of kind type (lsps are not required to set a kind)
"ui.virtual.jump-label" = { modifiers = [ "reversed" ] } # virtual jump labels (g + w)
"ui.virtual.ruler" = { bg = "stormy_night" } # ruler columns
"ui.virtual.whitespace" = { fg = "stormy_night" } # whitespace characters
"ui.virtual.wrap" = { fg = "slate_gray" } # soft-wrap indicator

# USER INTERFACE - MENUS AND POPUP
"ui.help"          = { bg = "nightfall_blue", fg = "winter_sky" }           # description box for commands
"ui.highlight"     = { underline = { color = "sky_blue", style = "line" } } # highlighted lines in the picker preview
"ui.menu"          = { bg = "midnight_thunder", fg = "winter_sky" }         # code and command completion menus ":"
"ui.menu.scroll"   = { bg = "moonlight_ocean", fg = "crystal_blue" }        # scrollbar
"ui.menu.selected" = { bg = "twilight_blue", fg = "winter_sky" }            # selected autocomplete item
"ui.popup"         = { bg = "midnight_thunder", fg = "winter_sky" }         # documentation popups (space + k)
"ui.popup.info"    = { bg = "nightfall_blue", fg = "winter_sky" }           # prompt for multiple key options, menu border (space, g, z, m, etc)
"ui.text"          = { fg = "white" }                                       # default text style, command prompts, popup text, etc
"ui.text.focus"    = { fg = "dreamy_blue" }                                 # the currently selected line in the picker (space j, space f, space s, etc)
"ui.text.inactive" = { fg = "slate_gray" }                                  # same as ui.text but when the text is inactive e.g. suggestions
"ui.text.info"     = { bg = "nightfall_blue", fg = "winter_sky" }           # the key: command in ui.popup.info boxes (space, g, z, m, etc)
"ui.window"        = { fg = "slate_gray" }                                  # borderlines separating splits

# USER INTERFACE - DIAGNOSTICS
"diagnostic"         = { modifiers = [ "reversed" ] }              # diagnostics fallback style (editing area)
"diagnostic.error"   = { bg = "rustic_red", fg = "winter_sky" }    # diagnostics error (editing area)
"diagnostic.hint"    = { bg = "walnut_brown", fg = "deep_abyss" }  # diagnostics hint (editing area)
"diagnostic.info"    = { bg = "twilight_blue", fg = "winter_sky" } # diagnostics info (editing area)
"diagnostic.warning" = { bg = "rustic_amber", fg = "winter_sky" }  # diagnostics warning (editing area)
"error"              = { fg = "ruby_glow" }                        # diagnostics error (gutter)
"hint"               = { fg = "walnut_brown" }                     # diagnostics hint (gutter)
"info"               = { fg = "sky_blue" }                         # diagnostics info (gutter)
"warning"            = { fg = "lemon_zest" }                       # diagnostics warning (gutter)

# COLOR NAMES
[palette]
# PALETTE USER INTERFACE
blaze_orange     = "#ff9000"
crystal_blue     = "#99c7ff"
deep_abyss       = "#080d15"
deep_purple      = "#4c1785"
dreamy_blue      = "#6eb0ff"
leafy_green      = "#81be83"
lemon_zest       = "#ffba00"
light_purple     = "#7533bd"
midnight_thunder = "#0d1526"
moonlight_ocean  = "#0c1420"
nightfall_blue   = "#1f2937"
pitch_black      = "#000000"
ruby_glow        = "#fa7970"
rustic_amber     = "#9d5800"
rustic_red       = "#540b0c"
sky_blue         = "#45b1e8"
slate_gray       = "#838a97"
slate_purple     = "#d2a8ff"
stormy_night     = "#254862"
twilight_blue    = "#2c5484"
walnut_brown     = "#987654"
winter_sky       = "#f3f4f6"

# SYNTAX HIGHLIGHTING
black  = "#0d1117"
blue   = "#45b1e8"
brown  = "#987654"
gray   = "#838a97"
green  = "#81be83"
orange = "#ff9000"
purple = "#d2a8ff"
red    = "#fa7970"
white  = "#dadada"
yellow = "#ffba00"
